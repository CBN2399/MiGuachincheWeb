// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using MiGuachincheWeb.Models;

namespace MiGuachincheWeb.Data
{
    public partial class guachincheContext : DbContext
    {
        public guachincheContext()
        {
        }

        public guachincheContext(DbContextOptions<guachincheContext> options)
            : base(options)
        {
        }

        public virtual DbSet<plato> platos { get; set; }
        public virtual DbSet<plato_restaurante> plato_restaurantes { get; set; }
        public virtual DbSet<restaurante> restaurantes { get; set; }
        public virtual DbSet<tipo> tipos { get; set; }
        public virtual DbSet<tipoRestaurante> tipoRestaurantes { get; set; }
        public virtual DbSet<zona> zonas { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<plato>(entity =>
            {
                entity.ToTable("plato");

                entity.HasIndex(e => e.tipoId, "ifk_PlatoTipo");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.tipo)
                    .WithMany(p => p.platos)
                    .HasForeignKey(d => d.tipoId)
                    .HasConstraintName("fk_tipo");
            });

            modelBuilder.Entity<plato_restaurante>(entity =>
            {
                entity.ToTable("plato_restaurante");

                entity.HasOne(d => d.plato)
                    .WithMany(p => p.plato_restaurantes)
                    .HasForeignKey(d => d.plato_Id)
                    .HasConstraintName("fk_plato");

                entity.HasOne(d => d.restaurante)
                    .WithMany(p => p.plato_restaurantes)
                    .HasForeignKey(d => d.restaurante_Id)
                    .HasConstraintName("fk_restaurante");
            });

            modelBuilder.Entity<restaurante>(entity =>
            {
                entity.ToTable("restaurante");

                entity.HasIndex(e => e.Id_tipo, "ifk_restTipoRest");

                entity.HasIndex(e => e.zonaId, "ifk_zonaRest");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Rest_Url)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.telefono)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.Id_tipoNavigation)
                    .WithMany(p => p.restaurantes)
                    .HasForeignKey(d => d.Id_tipo)
                    .HasConstraintName("fk_tipoRest");

                entity.HasOne(d => d.zona)
                    .WithMany(p => p.restaurantes)
                    .HasForeignKey(d => d.zonaId)
                    .HasConstraintName("fk_zona");
            });

            modelBuilder.Entity<tipo>(entity =>
            {
                entity.ToTable("tipo");

                entity.Property(e => e.nombre)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tipoRestaurante>(entity =>
            {
                entity.ToTable("tipoRestaurante");

                entity.Property(e => e.nombre)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<zona>(entity =>
            {
                entity.HasKey(e => e.Zona_id)
                    .HasName("PK__zona__CD7EA2967C6981B9");

                entity.ToTable("zona");

                entity.Property(e => e.descripcion)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}